{"ast":null,"code":"var _jsxFileName = \"/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js\";\nimport React from 'react';\nimport xmlData from './MMBestiary.xml';\n\nclass StatBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monster: {},\n      search: this.props.name,\n      isLoaded: false\n    };\n  } // Read XML data of monsters, search for given monster and update state with found data\n\n\n  componentDidMount() {\n    fetch(xmlData).then(response => response.text()).then(res => structureData(res, this.state.search)).then(data => {\n      this.setState({\n        monster: data,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, \"Loading...\");\n    } else {\n      var {\n        monster\n      } = this.state;\n      var size = \"Medium\";\n\n      switch (monster.size) {\n        case \"T\":\n          size = \"Tiny\";\n          break;\n\n        case \"S\":\n          size = \"Small\";\n          break;\n\n        case \"M\":\n          size = \"Medium\";\n          break;\n\n        case \"L\":\n          size = \"Large\";\n          break;\n\n        case \"H\":\n          size = \"Huge\";\n          break;\n\n        case \"G\":\n          size = \"Gargantuan\";\n          break;\n\n        default:\n          size = \"UNDEFINED (\" + monster.size + \")\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"StatBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, monster.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, size, \" \", monster.type, \", \", monster.alignment), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"Armor \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 57\n        }\n      }, monster.ac)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      }, \"Hit Points \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 61\n        }\n      }, monster.hp)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }\n      }, \"Speed \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 56\n        }\n      }, monster.speed))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }\n      }, \"STR\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 38\n        }\n      }, \"DEX\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 50\n        }\n      }, \"CON\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 62\n        }\n      }, \"INT\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 74\n        }\n      }, \"WIS\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 86\n        }\n      }, \"CHA\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }\n      }, AbilityModifier(monster.str)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 65\n        }\n      }, AbilityModifier(monster.dex)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 104\n        }\n      }, AbilityModifier(monster.con)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 143\n        }\n      }, AbilityModifier(monster.int)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 182\n        }\n      }, AbilityModifier(monster.wis)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 221\n        }\n      }, AbilityModifier(monster.cha))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(MonsterInfo, {\n        monster: monster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(Actions, {\n        action: monster.trait,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ActionContainer, {\n        value: monster.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ActionContainer, {\n        prefix: \"Legendary\",\n        value: monster.legendary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n} // Container for all actions/traits/attacks, including header. Use prefix as prefix in header.\n\n\nfunction ActionContainer(props) {\n  if (props.value.length === 0) return null;\n  var action = \"\";\n  if (typeof props.prefix != 'undefined') action = props.prefix + \" \";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, action, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Actions, {\n    action: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n} // Loop trough all actions/traits/attacks and render divs accordingly\n\n\nfunction Actions(props) {\n  const listActions = props.action.map((t, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"actionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, t.name, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 86\n    }\n  }, t.text)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }, listActions);\n} // Show all different infos of the monster\n\n\nfunction MonsterInfo(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Saving Throws\",\n    value: props.monster.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Skills\",\n    value: props.monster.skill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Damage Immunities\",\n    value: props.monster.immune,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Senses\",\n    value: props.monster.senses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Languages\",\n    value: props.monster.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Challenge\",\n    value: props.monster.cr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n} // individual info, show nothing if not specified in the data\n\n\nfunction MonsterInfoSub(props) {\n  if (!props.value) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, props.type, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 58\n    }\n  }, props.value));\n} // Search the given monster m in the xml-data d.\n\n\nfunction structureData(d, m) {\n  d = new window.DOMParser().parseFromString(d, \"text/xml\");\n  d = Array.from(d.getElementsByTagName(\"monster\"));\n  var monsterDOM = []; // Search for given monster\n\n  for (var i = 0; d.length; i++) {\n    if (d[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue === m) {\n      monsterDOM = d[i];\n      break;\n    }\n  }\n\n  return XML2Monster(monsterDOM);\n} // convert XML data into JavaScript object of a monster\n\n\nfunction XML2Monster(monsterDOM) {\n  var monster = {}; // Add nested elements (arrays) to the monster\n\n  monster[\"trait\"] = [];\n  monster[\"action\"] = [];\n  monster[\"legendary\"] = [];\n  const elements = monsterDOM.querySelectorAll(\"monster > *\"); // Select only immediate children\n\n  elements.forEach(e => {\n    if (e.childNodes.length === 1) {\n      monster[e.tagName] = e.childNodes[0].nodeValue;\n    } else {\n      // Nested elements, loop through children of children of monster\n      var tempElem = {};\n      const elements2 = e.querySelectorAll(\"*\");\n      elements2.forEach(e2 => {\n        tempElem[e2.tagName] = e2.childNodes[0].nodeValue;\n      });\n      monster[e.tagName].push(tempElem);\n    }\n  });\n  return monster;\n} // Returns the given (signed) modifier for an ability as string\n\n\nfunction AbilityModifier(n) {\n  var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n\n  if (x > 0) {\n    //\n    x = Math.floor(x); // x = floor(2.5) = 2\n  } else {\n    x = Math.ceil(x); // x = ceil(-1.5) = -1\n  }\n\n  if (x > 0) {\n    x = \"+\" + x;\n  } else if (x < 0) {\n    x = \"-\" + x;\n  } else {\n    x = \"\" + x;\n  }\n\n  return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;","map":{"version":3,"sources":["/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js"],"names":["React","xmlData","StatBlock","Component","constructor","props","state","monster","search","name","isLoaded","componentDidMount","fetch","then","response","text","res","structureData","data","setState","render","size","type","alignment","ac","hp","speed","AbilityModifier","str","dex","con","int","wis","cha","trait","action","legendary","ActionContainer","value","length","prefix","Actions","listActions","map","t","index","MonsterInfo","save","skill","immune","senses","languages","cr","MonsterInfoSub","d","m","window","DOMParser","parseFromString","Array","from","getElementsByTagName","monsterDOM","i","childNodes","nodeValue","XML2Monster","elements","querySelectorAll","forEach","e","tagName","tempElem","elements2","e2","push","n","x","Math","floor","ceil"],"mappings":"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","sourcesContent":["import React from 'react';\nimport xmlData from './MMBestiary.xml';\n\n\nclass StatBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monster: {},\n      search: this.props.name,\n      isLoaded: false,\n    };\n  }\n\n  // Read XML data of monsters, search for given monster and update state with found data\n  componentDidMount() {\n    fetch(xmlData)\n    .then(response => response.text())\n    .then(res => structureData(res, this.state.search))\n    .then(data => {\n      this.setState({\n        monster: data,\n        isLoaded: true,\n      })}\n    );\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (<div>Loading...</div>);\n    } else {\n      var {monster} = this.state;\n      var size = \"Medium\";\n      switch (monster.size) {\n        case \"T\":\n          size = \"Tiny\";\n          break;\n        case \"S\":\n          size = \"Small\";\n          break;\n        case \"M\":\n          size = \"Medium\";\n          break;\n        case \"L\":\n          size = \"Large\";\n          break;\n        case \"H\":\n          size = \"Huge\";\n          break;\n        case \"G\":\n          size = \"Gargantuan\";\n          break;\n        default:\n          size = \"UNDEFINED (\"+monster.size+\")\";\n      }\n      return (\n        <div className=\"StatBlock\">\n          <div className=\"name\">{monster.name}</div>\n          <div className=\"description\">{size} {monster.type}, {monster.alignment}</div>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <div className=\"red\">\n              <div ><span className=\"bold\">Armor </span><span>{monster.ac}</span></div>\n              <div><span className=\"bold\">Hit Points </span><span>{monster.hp}</span></div>\n              <div><span className=\"bold\">Speed </span><span>{monster.speed}</span></div>\n          </div>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <table>\n              <thead><tr><th>STR</th><th>DEX</th><th>CON</th><th>INT</th><th>WIS</th><th>CHA</th></tr></thead>\n              <tbody><tr><td>{AbilityModifier(monster.str)}</td><td>{AbilityModifier(monster.dex)}</td><td>{AbilityModifier(monster.con)}</td><td>{AbilityModifier(monster.int)}</td><td>{AbilityModifier(monster.wis)}</td><td>{AbilityModifier(monster.cha)}</td></tr></tbody>\n          </table>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <MonsterInfo monster={monster} />\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <Actions action={monster.trait} />\n\n          <ActionContainer value={monster.action} />\n\n          <ActionContainer prefix=\"Legendary\" value={monster.legendary} />\n\n        </div>\n      );\n    }\n  }\n}\n\n// Container for all actions/traits/attacks, including header. Use prefix as prefix in header.\nfunction ActionContainer(props) {\n  if (props.value.length === 0) return null;\n  var action = \"\";\n  if (typeof props.prefix != 'undefined') action = props.prefix + \" \";\n  return (\n    <div>\n      <div className=\"actions red\">{action}Actions</div>\n      <div className=\"hr\"></div>\n      <Actions action={props.value} />\n    </div>\n  );\n}\n\n// Loop trough all actions/traits/attacks and render divs accordingly\nfunction Actions(props) {\n  const listActions = props.action.map((t, index) =>\n    <div className=\"action\" key={index}><span className=\"actionname\">{t.name} </span><span>{t.text}</span></div>\n  );\n  return <div>{listActions}</div>;\n}\n\n// Show all different infos of the monster\nfunction MonsterInfo(props) {\n  return (\n    <div className=\"red\">\n      <MonsterInfoSub type=\"Saving Throws\" value={props.monster.save} />\n      <MonsterInfoSub type=\"Skills\" value={props.monster.skill} />\n      <MonsterInfoSub type=\"Damage Immunities\" value={props.monster.immune} />\n      <MonsterInfoSub type=\"Senses\" value={props.monster.senses} />\n      <MonsterInfoSub type=\"Languages\" value={props.monster.languages} />\n      <MonsterInfoSub type=\"Challenge\" value={props.monster.cr} />\n    </div>\n  );\n}\n\n// individual info, show nothing if not specified in the data\nfunction MonsterInfoSub(props) {\n  if (!props.value) return null;\n  return <div><span className=\"bold\">{props.type} </span><span>{props.value}</span></div>;\n}\n\n// Search the given monster m in the xml-data d.\nfunction structureData(d, m) {\n  d = (new window.DOMParser()).parseFromString(d, \"text/xml\");\n  d = Array.from(d.getElementsByTagName(\"monster\"));\n  var monsterDOM = [];\n  // Search for given monster\n  for (var i = 0; d.length; i++) {\n    if(d[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue === m) {\n      monsterDOM = d[i];\n      break;\n    }\n  }\n  return XML2Monster(monsterDOM);\n}\n\n// convert XML data into JavaScript object of a monster\nfunction XML2Monster(monsterDOM) {\n  var monster = {};\n\n  // Add nested elements (arrays) to the monster\n  monster[\"trait\"] = [];\n  monster[\"action\"] = [];\n  monster[\"legendary\"] = [];\n\n  const elements = monsterDOM.querySelectorAll(\"monster > *\"); // Select only immediate children\n\telements.forEach(e => {\n    if (e.childNodes.length === 1) {\n      monster[e.tagName] = e.childNodes[0].nodeValue;\n    } else {\n      // Nested elements, loop through children of children of monster\n      var tempElem = {};\n      const elements2 = e.querySelectorAll(\"*\");\n      elements2.forEach(e2 => {\n        tempElem[e2.tagName] = e2.childNodes[0].nodeValue;\n      });\n      monster[e.tagName].push(tempElem);\n\n    }\n\t});\n  return monster;\n}\n\n// Returns the given (signed) modifier for an ability as string\nfunction AbilityModifier(n) {\n    var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n    if (x > 0) { //\n      x = Math.floor(x); // x = floor(2.5) = 2\n    } else {\n      x = Math.ceil(x); // x = ceil(-1.5) = -1\n    }\n\n    if (x > 0) {\n      x = \"+\" + x;\n    } else if (x < 0) {\n      x = \"-\" + x;\n    } else {\n      x = \"\" + x;\n    }\n\n    return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;\n"]},"metadata":{},"sourceType":"module"}