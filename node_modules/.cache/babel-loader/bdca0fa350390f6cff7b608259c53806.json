{"ast":null,"code":"var _jsxFileName = \"/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport xmlData from './MMBestiary.xml';\nimport XMLParser from 'react-xml-parser';\n\nclass StatBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monster: {},\n      search: this.props.name,\n      isLoaded: false\n    };\n  } // Read XML data of monsters, search for given monster and update state with found data\n\n\n  componentDidMount() {\n    fetch(xmlData).then(response => response.text()).then(res => structureData(res, this.state.search)).then(data => {\n      this.setState({\n        monster: data,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, \"Loading...\");\n    } else {\n      var {\n        monster,\n        search,\n        isLoaded\n      } = this.state;\n      var size = \"Medium\";\n\n      switch (monster.size) {\n        case \"T\":\n          size = \"Tiny\";\n          break;\n\n        case \"S\":\n          size = \"Small\";\n          break;\n\n        case \"M\":\n          size = \"Medium\";\n          break;\n\n        case \"L\":\n          size = \"Large\";\n          break;\n\n        case \"H\":\n          size = \"Huge\";\n          break;\n\n        case \"G\":\n          size = \"Gargantuan\";\n          break;\n\n        default:\n          size = \"UNDEFINED (\" + monster.size + \")\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"StatBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, monster.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, size, \" \", monster.type, \", \", monster.alignment), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Armor \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 57\n        }\n      }, monster.ac)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }\n      }, \"Hit Points \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 61\n        }\n      }, monster.hp)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      }, \"Speed \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 56\n        }\n      }, monster.speed))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }\n      }, \"STR\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 38\n        }\n      }, \"DEX\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 50\n        }\n      }, \"CON\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 62\n        }\n      }, \"INT\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 74\n        }\n      }, \"WIS\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 86\n        }\n      }, \"CHA\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }\n      }, AbilityModifier(monster.str)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 65\n        }\n      }, AbilityModifier(monster.dex)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 104\n        }\n      }, AbilityModifier(monster.con)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 143\n        }\n      }, AbilityModifier(monster.int)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 182\n        }\n      }, AbilityModifier(monster.wis)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 221\n        }\n      }, AbilityModifier(monster.cha))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(MonsterInfo, {\n        monster: monster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangleContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"triangle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 46\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"attackname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 35\n        }\n      }, \"Greatclub. \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 82\n        }\n      }, \"+6 to hit, reach 5 ft., one target. 13 (2d8+4) bludgeoning damage.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"attackname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 35\n        }\n      }, \"Greatclub.\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 81\n        }\n      }, \" Melee Weapon Attack: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 140\n        }\n      }, \"+6 to hit, reach 5 ft., one target.\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 188\n        }\n      }, \"Hit: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 230\n        }\n      }, \"13 (2d8+4) bludgeoning damage.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"attackname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }\n      }, \"Javelin.\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 79\n        }\n      }, \" Melee or Ranged Weapon Attack: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 148\n        }\n      }, \"+6 to hit, reach 5 ft. or 30ft./120, one target.\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 209\n        }\n      }, \"Hit: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 251\n        }\n      }, \"11 (2d6+4) piercing damage.\")));\n    }\n  }\n\n}\n\nfunction MonsterInfo(props) {\n  // const senses = <div><span className=\"bold\">Senses </span><span> darkvision 60ft., passive Perception 8</span></div>;\n  // const languages = <div><span className=\"bold\">Languages </span><span> Common, Giant</span></div>;\n  // const challenge = <div><span className=\"bold\">Challenge </span><span> 2 (450 XP)</span></div>;\n  // save\n  // skill\n  // immune\n  // senses\n  // languages\n  // cr\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Senses\",\n    value: props.monster.senses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }\n  }, \"Languages \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 52\n    }\n  }, \" Common, Giant\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }\n  }, \"Challenge \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 52\n    }\n  }, \" 2 (450 XP)\")));\n}\n\nfunction MonsterInfoSub(props) {\n  console.log(props);\n\n  if (!props.type) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Senses \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 52\n    }\n  }, \" darkvision 60ft., passive Perception 8\"));\n} // Search the given monster m in the xml-data d.\n\n\nfunction structureData(d, m) {\n  d = new window.DOMParser().parseFromString(d, \"text/xml\");\n  d = Array.from(d.getElementsByTagName(\"monster\"));\n  var monsterDOM = []; // Search for given monster\n\n  for (var i = 0; d.length; i++) {\n    if (d[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue == m) {\n      monsterDOM = d[i];\n      break;\n    }\n  }\n\n  return XML2Monster(monsterDOM);\n} // convert XML data into JavaScript object of a monster\n\n\nfunction XML2Monster(monsterDOM) {\n  var monster = {}; // Add nested elements (arrays) to the monster\n\n  monster[\"trait\"] = [];\n  monster[\"action\"] = [];\n  monster[\"legendary\"] = [];\n  const elements = monsterDOM.querySelectorAll(\"monster > *\"); // Select only immediate children\n\n  elements.forEach(e => {\n    if (e.childNodes.length == 1) {\n      monster[e.tagName] = e.childNodes[0].nodeValue;\n    } else {\n      // Nested elements, loop through children of children of monster\n      var tempElem = {};\n      const elements2 = e.querySelectorAll(\"*\");\n      elements2.forEach(e2 => {\n        tempElem[e2.tagName] = e2.childNodes[0].nodeValue;\n      });\n      monster[e.tagName].push(tempElem);\n    }\n  });\n  return monster;\n} // Returns the given (signed) modifier for an ability as string\n\n\nfunction AbilityModifier(n) {\n  var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n\n  if (x > 0) {\n    //\n    x = Math.floor(x); // x = floor(2.5) = 2\n  } else {\n    x = Math.ceil(x); // x = ceil(-1.5) = -1\n  }\n\n  if (x > 0) {\n    x = \"+\" + x;\n  } else if (x < 0) {\n    x = \"-\" + x;\n  } else {\n    x = \"\" + x;\n  }\n\n  return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;","map":{"version":3,"sources":["/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js"],"names":["React","ReactDOM","xmlData","XMLParser","StatBlock","Component","constructor","props","state","monster","search","name","isLoaded","componentDidMount","fetch","then","response","text","res","structureData","data","setState","render","size","type","alignment","ac","hp","speed","AbilityModifier","str","dex","con","int","wis","cha","MonsterInfo","console","log","senses","MonsterInfoSub","d","m","window","DOMParser","parseFromString","Array","from","getElementsByTagName","monsterDOM","i","length","childNodes","nodeValue","XML2Monster","elements","querySelectorAll","forEach","e","tagName","tempElem","elements2","e2","push","n","x","Math","floor","ceil"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport xmlData from './MMBestiary.xml';\nimport XMLParser from 'react-xml-parser';\n\nclass StatBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monster: {},\n      search: this.props.name,\n      isLoaded: false,\n    };\n  }\n\n  // Read XML data of monsters, search for given monster and update state with found data\n  componentDidMount() {\n    fetch(xmlData)\n    .then(response => response.text())\n    .then(res => structureData(res, this.state.search))\n    .then(data => {\n      this.setState({\n        monster: data,\n        isLoaded: true,\n      })}\n    );\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (<div>Loading...</div>);\n    } else {\n      var {monster, search, isLoaded} = this.state;\n      var size = \"Medium\";\n      switch (monster.size) {\n        case \"T\":\n          size = \"Tiny\";\n          break;\n        case \"S\":\n          size = \"Small\";\n          break;\n        case \"M\":\n          size = \"Medium\";\n          break;\n        case \"L\":\n          size = \"Large\";\n          break;\n        case \"H\":\n          size = \"Huge\";\n          break;\n        case \"G\":\n          size = \"Gargantuan\";\n          break;\n        default:\n          size = \"UNDEFINED (\"+monster.size+\")\";\n      }\n      return (\n        <div className=\"StatBlock\">\n          <div className=\"name\">{monster.name}</div>\n          <div className=\"description\">{size} {monster.type}, {monster.alignment}</div>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <div className=\"red\">\n              <div ><span className=\"bold\">Armor </span><span>{monster.ac}</span></div>\n              <div><span className=\"bold\">Hit Points </span><span>{monster.hp}</span></div>\n              <div><span className=\"bold\">Speed </span><span>{monster.speed}</span></div>\n          </div>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <table>\n              <thead><tr><th>STR</th><th>DEX</th><th>CON</th><th>INT</th><th>WIS</th><th>CHA</th></tr></thead>\n              <tbody><tr><td>{AbilityModifier(monster.str)}</td><td>{AbilityModifier(monster.dex)}</td><td>{AbilityModifier(monster.con)}</td><td>{AbilityModifier(monster.int)}</td><td>{AbilityModifier(monster.wis)}</td><td>{AbilityModifier(monster.cha)}</td></tr></tbody>\n          </table>\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <MonsterInfo monster={monster} />\n\n          <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>\n\n          <div className=\"attack\"><span className=\"attackname\">Greatclub. </span><span>+6 to hit, reach 5 ft., one target. 13 (2d8+4) bludgeoning damage.</span></div>\n\n          <div className=\"actions red\">Actions</div>\n          <div className=\"hr\"></div>\n\n          <div className=\"attack\"><span className=\"attackname\">Greatclub.</span><span className=\"description\"> Melee Weapon Attack: </span><span>+6 to hit, reach 5 ft., one target.</span><span className=\"description\">Hit: </span><span>13 (2d8+4) bludgeoning damage.</span></div>\n          <div className=\"attack\"><span className=\"attackname\">Javelin.</span><span className=\"description\"> Melee or Ranged Weapon Attack: </span><span>+6 to hit, reach 5 ft. or 30ft./120, one target.</span><span className=\"description\">Hit: </span><span>11 (2d6+4) piercing damage.</span></div>\n        </div>\n      );\n    }\n  }\n}\n\nfunction MonsterInfo(props) {\n  // const senses = <div><span className=\"bold\">Senses </span><span> darkvision 60ft., passive Perception 8</span></div>;\n  // const languages = <div><span className=\"bold\">Languages </span><span> Common, Giant</span></div>;\n  // const challenge = <div><span className=\"bold\">Challenge </span><span> 2 (450 XP)</span></div>;\n  // save\n  // skill\n  // immune\n  // senses\n  // languages\n  // cr\n  console.log(props);\n  return (\n    <div className=\"red\">\n      <MonsterInfoSub type=\"Senses\" value={props.monster.senses} />\n      <div><span className=\"bold\">Languages </span><span> Common, Giant</span></div>\n      <div><span className=\"bold\">Challenge </span><span> 2 (450 XP)</span></div>\n    </div>\n  );\n\n}\n\nfunction MonsterInfoSub(props) {\n  console.log(props);\n  if (!props.type) {\n    return null;\n  }\n  return <div><span className=\"bold\">Senses </span><span> darkvision 60ft., passive Perception 8</span></div>;\n}\n\n// Search the given monster m in the xml-data d.\nfunction structureData(d, m) {\n  d = (new window.DOMParser()).parseFromString(d, \"text/xml\");\n  d = Array.from(d.getElementsByTagName(\"monster\"));\n  var monsterDOM = [];\n  // Search for given monster\n  for (var i = 0; d.length; i++) {\n    if(d[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue == m) {\n      monsterDOM = d[i];\n      break;\n    }\n  }\n  return XML2Monster(monsterDOM);\n}\n\n// convert XML data into JavaScript object of a monster\nfunction XML2Monster(monsterDOM) {\n  var monster = {};\n\n  // Add nested elements (arrays) to the monster\n  monster[\"trait\"] = [];\n  monster[\"action\"] = [];\n  monster[\"legendary\"] = [];\n\n  const elements = monsterDOM.querySelectorAll(\"monster > *\"); // Select only immediate children\n\telements.forEach(e => {\n    if (e.childNodes.length == 1) {\n      monster[e.tagName] = e.childNodes[0].nodeValue;\n    } else {\n      // Nested elements, loop through children of children of monster\n      var tempElem = {};\n      const elements2 = e.querySelectorAll(\"*\");\n      elements2.forEach(e2 => {\n        tempElem[e2.tagName] = e2.childNodes[0].nodeValue;\n      });\n      monster[e.tagName].push(tempElem);\n\n    }\n\t});\n  return monster;\n}\n\n// Returns the given (signed) modifier for an ability as string\nfunction AbilityModifier(n) {\n    var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n    if (x > 0) { //\n      x = Math.floor(x); // x = floor(2.5) = 2\n    } else {\n      x = Math.ceil(x); // x = ceil(-1.5) = -1\n    }\n\n    if (x > 0) {\n      x = \"+\" + x;\n    } else if (x < 0) {\n      x = \"-\" + x;\n    } else {\n      x = \"\" + x;\n    }\n\n    return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;\n"]},"metadata":{},"sourceType":"module"}