{"ast":null,"code":"var _jsxFileName = \"/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js\";\nimport React from 'react';\n\nclass StatBlock extends React.Component {\n  render() {\n    if (this.props.monster) {\n      var monster = this.props.monster;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"StatBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }\n      }, monster.name), /*#__PURE__*/React.createElement(Type, {\n        monster: monster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TriangleHR, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Armor, {\n        ac: monster.ac,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }, \"Hit Points \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 61\n        }\n      }, \"hp\")), /*#__PURE__*/React.createElement(Speed, {\n        speed: monster.speed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(TriangleHR, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 26\n        }\n      }, \"STR\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 38\n        }\n      }, \"DEX\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 50\n        }\n      }, \"CON\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 62\n        }\n      }, \"INT\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 74\n        }\n      }, \"WIS\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 86\n        }\n      }, \"CHA\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }\n      }, AbilityModifier(monster.str)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 65\n        }\n      }, AbilityModifier(monster.dex)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 104\n        }\n      }, AbilityModifier(monster.con)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 143\n        }\n      }, AbilityModifier(monster.int)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 182\n        }\n      }, AbilityModifier(monster.wis)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 221\n        }\n      }, AbilityModifier(monster.cha))))), /*#__PURE__*/React.createElement(TriangleHR, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"StatBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Enter a monster\");\n    }\n  }\n\n}\n\nfunction Speed(props) {\n  var speed;\n\n  for (const [type, value] of Object.entries(props.speed)) {\n    console.log(`${key}: ${value}`);\n\n    switch (key) {\n      case \"walk\":\n        speed += value + \"ft., \";\n        break;\n\n      case \"swim\":\n        speed += \"swim \" + value + \"ft., \";\n        break;\n\n      case \"fly\":\n        speed += \"fly \" + value + \"ft., \";\n        break;\n\n      default:\n        speed += \"undefined speed (\" + key + \"), \";\n    }\n\n    speed = speed.splice(0, -2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Speed \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 51\n    }\n  }, speed));\n}\n\nfunction Armor(props) {\n  var ac;\n\n  if (props.ac[0].ac) {\n    var from = \"\";\n    props.ac[0].from.forEach(e => {\n      from += bracketText(e) + \", \";\n    });\n    from = from.slice(0, -2);\n    ac = props.ac[0].ac + \" (\" + from + \")\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, \"Armor \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 52\n    }\n  }, ac));\n} // Create type div\n\n\nfunction Type(props) {\n  const monster = props.monster;\n  var size;\n\n  switch (monster.size) {\n    case \"T\":\n      size = \"Tiny\";\n      break;\n\n    case \"S\":\n      size = \"Small\";\n      break;\n\n    case \"M\":\n      size = \"Medium\";\n      break;\n\n    case \"L\":\n      size = \"Large\";\n      break;\n\n    case \"H\":\n      size = \"Huge\";\n      break;\n\n    case \"G\":\n      size = \"Gargantuan\";\n      break;\n\n    default:\n      size = \"UNDEFINED (\" + monster.size + \")\";\n  }\n\n  var type;\n\n  if (typeof monster.type === 'Object') {\n    type = monster.type.type + \" (\" + monster.type.tags + \")\";\n  } else {\n    type = monster.type;\n  }\n\n  var alignment = \"\";\n  monster.alignment.forEach(e => {\n    var partial;\n\n    switch (e) {\n      case \"E\":\n        partial = \"evil \";\n        break;\n\n      case \"N\":\n        partial = \"neutral \";\n        break;\n\n      case \"G\":\n        partial = \"good \";\n        break;\n\n      case \"L\":\n        partial = \"lawful \";\n        break;\n\n      case \"C\":\n        partial = \"chaotic \";\n        break;\n\n      default:\n        partial = \"UNDEFINED (\" + e + \") \";\n    }\n\n    alignment += partial;\n  });\n  alignment = alignment.slice(0, -1); // Remove last space from string\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, size, \" \", type, \", \", alignment);\n} // Shorthand for triangle div\n\n\nfunction TriangleHR(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"triangleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"triangle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 45\n    }\n  }));\n} // Container for all actions/traits/attacks, including header. Use prefix as prefix in header\n\n\nfunction ActionContainer(props) {\n  if (props.value.length === 0) return null;\n  var action = \"\";\n  if (typeof props.prefix != 'undefined') action = props.prefix + \" \";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, action, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Actions, {\n    action: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }));\n} // Loop trough all actions/traits/attacks and render divs accordingly. (Without header)\n\n\nfunction Actions(props) {\n  const listActions = props.action.map((t, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"actionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 41\n    }\n  }, t.name, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 86\n    }\n  }, t.text)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 10\n    }\n  }, listActions);\n} // Show all different infos of the monster\n\n\nfunction MonsterInfo(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Saving Throws\",\n    value: props.monster.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Skills\",\n    value: props.monster.skill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Damage Immunities\",\n    value: props.monster.immune,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Senses\",\n    value: props.monster.senses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Languages\",\n    value: props.monster.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonsterInfoSub, {\n    type: \"Challenge\",\n    value: props.monster.cr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }));\n} // individual info, show nothing if not specified in the data\n\n\nfunction MonsterInfoSub(props) {\n  if (!props.value) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, props.type, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 58\n    }\n  }, props.value));\n} // Style specified text with brackets\n\n\nfunction bracketText(s) {\n  var elem;\n\n  if (s[0] === \"{\" && s[s.length - 1] === \"}\") {\n    s = s.replace(/[{}']+/g, '');\n    s = s.split('|')[0];\n    const type = s.match(/@(\\w*)/, ''); // [\"@item \", \"item\"]\n\n    console.log(type[1]); // \"item\"\n\n    switch (type[1]) {\n      case \"item\":\n        elem = s.replace(/@(\\w*)+/g, '');\n        break;\n\n      default:\n    }\n  } else {\n    elem = s;\n  }\n\n  return elem;\n} // Returns the given (signed) modifier for an ability as string\n\n\nfunction AbilityModifier(n) {\n  var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n\n  if (x > 0) {\n    //\n    x = Math.floor(x); // x = floor(2.5) = 2\n  } else {\n    x = Math.ceil(x); // x = ceil(-1.5) = -1\n  }\n\n  if (x > 0) {\n    x = \"+\" + x;\n  } else if (x < 0) {\n    x = \"-\" + x;\n  } else {\n    x = \"\" + x;\n  }\n\n  return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;","map":{"version":3,"sources":["/Users/rutger/Desktop/DnD/DnD Toolies/MonsterAI/MonsterHelp-React/src/Statblock.js"],"names":["React","StatBlock","Component","render","props","monster","name","ac","speed","AbilityModifier","str","dex","con","int","wis","cha","Speed","type","value","Object","entries","console","log","key","splice","Armor","from","forEach","e","bracketText","slice","Type","size","tags","alignment","partial","TriangleHR","ActionContainer","length","action","prefix","Actions","listActions","map","t","index","text","MonsterInfo","save","skill","immune","senses","languages","cr","MonsterInfoSub","s","elem","replace","split","match","n","x","Math","floor","ceil"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass StatBlock extends React.Component {\n  render() {\n    if (this.props.monster) {\n      var monster = this.props.monster;\n      return (\n        <div className=\"StatBlock\">\n          <div className=\"name\">{monster.name}</div>\n          <Type monster={monster} />\n\n          <TriangleHR />\n\n          <div className=\"red\">\n              <Armor ac={monster.ac} />\n              <div><span className=\"bold\">Hit Points </span><span>hp</span></div>\n              <Speed speed={monster.speed} />\n          </div>\n\n          <TriangleHR />\n\n          <table>\n              <thead><tr><th>STR</th><th>DEX</th><th>CON</th><th>INT</th><th>WIS</th><th>CHA</th></tr></thead>\n              <tbody><tr><td>{AbilityModifier(monster.str)}</td><td>{AbilityModifier(monster.dex)}</td><td>{AbilityModifier(monster.con)}</td><td>{AbilityModifier(monster.int)}</td><td>{AbilityModifier(monster.wis)}</td><td>{AbilityModifier(monster.cha)}</td></tr></tbody>\n          </table>\n\n          <TriangleHR />\n\n\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"StatBlock\">\n          Enter a monster\n        </div>\n      );\n    }\n  }\n}\n\nfunction Speed(props) {\n  var speed;\n  for (const [type, value] of Object.entries(props.speed)) {\n    console.log(`${key}: ${value}`);\n    switch (key) {\n      case \"walk\":\n        speed += value + \"ft., \";\n        break;\n      case \"swim\":\n        speed += \"swim \" + value + \"ft., \";\n        break;\n      case \"fly\":\n        speed += \"fly \" + value + \"ft., \";\n        break;\n      default:\n        speed += \"undefined speed (\" + key + \"), \";\n    }\n    speed = speed.splice(0, -2);\n  }\n  return <div><span className=\"bold\">Speed </span><span>{speed}</span></div>;\n}\n\nfunction Armor(props) {\n  var ac;\n  if (props.ac[0].ac) {\n    var from = \"\";\n    props.ac[0].from.forEach(e => {\n      from += bracketText(e) + \", \";\n    });\n    from = from.slice(0, -2);\n    ac = props.ac[0].ac + \" (\" + from + \")\";\n  }\n  return <div ><span className=\"bold\">Armor </span><span>{ac}</span></div>;\n}\n\n// Create type div\nfunction Type(props) {\n  const monster = props.monster;\n  var size;\n  switch (monster.size) {\n    case \"T\":\n      size = \"Tiny\";\n      break;\n    case \"S\":\n      size = \"Small\";\n      break;\n    case \"M\":\n      size = \"Medium\";\n      break;\n    case \"L\":\n      size = \"Large\";\n      break;\n    case \"H\":\n      size = \"Huge\";\n      break;\n    case \"G\":\n      size = \"Gargantuan\";\n      break;\n    default:\n      size = \"UNDEFINED (\"+monster.size+\")\";\n  }\n\n  var type;\n  if (typeof monster.type === 'Object') {\n    type = monster.type.type + \" (\" + monster.type.tags + \")\";\n  } else {\n    type = monster.type;\n  }\n\n  var alignment = \"\";\n  monster.alignment.forEach(e => {\n    var partial;\n    switch (e) {\n      case \"E\":\n        partial = \"evil \";\n        break;\n      case \"N\":\n        partial = \"neutral \";\n        break;\n      case \"G\":\n        partial = \"good \";\n        break;\n      case \"L\":\n        partial = \"lawful \";\n        break;\n      case \"C\":\n        partial = \"chaotic \";\n        break;\n      default:\n        partial = \"UNDEFINED (\"+e+\") \";\n    }\n    alignment += partial;\n  });\n  alignment = alignment.slice(0,-1); // Remove last space from string\n\n  return <div className=\"description\">{size} {type}, {alignment}</div>;\n}\n\n// Shorthand for triangle div\nfunction TriangleHR(props) {\n  return <div className=\"triangleContainer\"><div className=\"triangle\"></div></div>;\n}\n\n// Container for all actions/traits/attacks, including header. Use prefix as prefix in header\nfunction ActionContainer(props) {\n  if (props.value.length === 0) return null;\n  var action = \"\";\n  if (typeof props.prefix != 'undefined') action = props.prefix + \" \";\n  return (\n    <div>\n      <div className=\"actions red\">{action}Actions</div>\n      <div className=\"hr\"></div>\n      <Actions action={props.value} />\n    </div>\n  );\n}\n\n// Loop trough all actions/traits/attacks and render divs accordingly. (Without header)\nfunction Actions(props) {\n  const listActions = props.action.map((t, index) =>\n    <div className=\"action\" key={index}><span className=\"actionname\">{t.name} </span><span>{t.text}</span></div>\n  );\n  return <div>{listActions}</div>;\n}\n\n// Show all different infos of the monster\nfunction MonsterInfo(props) {\n  return (\n    <div className=\"red\">\n      <MonsterInfoSub type=\"Saving Throws\" value={props.monster.save} />\n      <MonsterInfoSub type=\"Skills\" value={props.monster.skill} />\n      <MonsterInfoSub type=\"Damage Immunities\" value={props.monster.immune} />\n      <MonsterInfoSub type=\"Senses\" value={props.monster.senses} />\n      <MonsterInfoSub type=\"Languages\" value={props.monster.languages} />\n      <MonsterInfoSub type=\"Challenge\" value={props.monster.cr} />\n    </div>\n  );\n}\n\n// individual info, show nothing if not specified in the data\nfunction MonsterInfoSub(props) {\n  if (!props.value) return null;\n  return <div><span className=\"bold\">{props.type} </span><span>{props.value}</span></div>;\n}\n\n// Style specified text with brackets\nfunction bracketText(s) {\n  var elem;\n  if (s[0] === \"{\" && s[s.length-1] === \"}\") {\n    s = s.replace(/[{}']+/g,'');\n    s = s.split('|')[0];\n    const type = s.match(/@(\\w*)/, ''); // [\"@item \", \"item\"]\n    console.log(type[1]); // \"item\"\n    switch (type[1]) {\n      case \"item\":\n        elem = s.replace(/@(\\w*)+/g,'');\n        break;\n      default:\n\n    }\n  } else {\n    elem = s;\n  }\n  return elem;\n}\n\n// Returns the given (signed) modifier for an ability as string\nfunction AbilityModifier(n) {\n    var x = (n - 10) / 2; // x = (15 - 10) / 2 = 2.5 || x = (7 - 10) / 2 = -1.5\n    if (x > 0) { //\n      x = Math.floor(x); // x = floor(2.5) = 2\n    } else {\n      x = Math.ceil(x); // x = ceil(-1.5) = -1\n    }\n\n    if (x > 0) {\n      x = \"+\" + x;\n    } else if (x < 0) {\n      x = \"-\" + x;\n    } else {\n      x = \"\" + x;\n    }\n\n    return n + \" (\" + x + \")\";\n}\n\nexport default StatBlock;\n"]},"metadata":{},"sourceType":"module"}